@page "/discount"
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@inject HttpClient Http

<PageTitle>Discount Transaction</PageTitle>

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1>Discount Transaction</h1>
    <button class="btn btn-primary" @onclick="ShowAddTransaction">New Transaction</button>
</div>

<p>This component demonstrates showing data.</p>

@if (dt == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>TransactionId</th>
                <th>CustomerType</th>
                <th>RewardPoints</th>
                <th>TotalBelanja</th>
                <th>Discount</th>
                <th>TotalBayar</th>
                <th>Id</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var dete in dt)
            {
                <tr>
                    <td>@dete.TransactionId</td>
                    <td>@dete.CustomerType</td>
                    <td>@dete.RewardPoints</td>
                    <td>@dete.TotalBelanja</td>
                    <td>@dete.Discount</td>
                    <td>@dete.TotalBayar</td>
                    <td>@dete.Id</td>
                </tr>
            }
        </tbody>
    </table>

    <div class="d-flex justify-content-end align-items-center mb-3">
        <div class="d-flex align-items-center mx-3">
            <label for="pageSize" class="form-label" style="margin-bottom: 0; margin-right: 8px; white-space: nowrap;">Items per page:</label>
            <select @onchange="OnPageSizeChanged" class="form-select" id="pageSize">
                <option value="5">5</option>
                <option value="10">10</option>
                <option value="20">20</option>
            </select>
        </div>

        <div class="form-group mb-0 me-2 d-flex align-items-center">
            @currentPageRange of @totalItems
        </div>


        <div class="pagination d-flex align-items-center mx-3">
            <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                <button class="page-link bi bi-skip-start" @onclick="()=> LoadTransaction(1)"></button>
            </li>
            <li class="page-item @(CurrentPage == 1 ? "disabled" : "")">
                <button class="page-link bi bi-caret-left" @onclick="()=> LoadTransaction(CurrentPage - 1)"></button>
            </li>
            <li class="page-item @(CurrentPage == totalPages ? "disabled" : "")">
                <button class="page-link bi bi-caret-right" @onclick="()=> LoadTransaction(CurrentPage + 1)"></button>
            </li>
            <li class="page-item @(CurrentPage == totalPages ? "disabled" : "")">
                <button class="page-link bi bi-skip-end" @onclick="()=> LoadTransaction(totalPages)"></button>
            </li>
        </div>

    </div>
}

@code {
    private List<DiscountTransaction> dt = new List<DiscountTransaction>();
    private int CurrentPage = 1;
    private int PageSize = 5;
    private int totalPages = 1;
    private string currentPageRange;
    private int totalItems;

    protected override async Task OnInitializedAsync()
    {

        await LoadTransaction(CurrentPage);
    }

    private void ShowAddTransaction()
    {
        NavigationManager.NavigateTo("/addnewtransaction");
    }

    private async Task OnPageSizeChanged(ChangeEventArgs e)
    {
        PageSize = int.Parse(e.Value.ToString());
        await LoadTransaction(CurrentPage);
    }

    async Task LoadTransaction(int page = 1)
    {
        CurrentPage = page;

        var response = await Http.GetFromJsonAsync<PaginatedResponse<DiscountTransaction>>($"https://localhost:7061/DiscountTransaction?pageNumber={CurrentPage}&pageSize={PageSize}");
        if (response != null)
        {
            dt = response.Data.ToList();
            totalItems = response.Total;
            totalPages = (int)Math.Ceiling((double)totalItems / PageSize);
            currentPageRange = $"{(CurrentPage - 1) * PageSize + 1}-{Math.Min(CurrentPage * PageSize, totalItems)}";
        }

        StateHasChanged();
    }

    public class DiscountTransaction
    {
        public Guid Id { get; set; }
        public string TransactionId { get; set; } = string.Empty;
        public string CustomerType { get; set; } = string.Empty;
        public int RewardPoints { get; set; }
        public decimal TotalBelanja { get; set; }
        public decimal Discount { get; set; }
        public decimal TotalBayar { get; set; }
    }

    public class PaginatedResponse<T>
    {
        public List<T> Data { get; set; }
        public int Total { get; set; }
        public int PageNumber { get; set; }
        public int PageSize { get; set; }
    }
}
